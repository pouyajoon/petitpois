3 Oct 22:46:32 - [nodemon] v0.6.23
3 Oct 22:46:32 - [32m[nodemon] watching: /Users/pouya/Documents/dev/pp/server[0m
3 Oct 22:46:32 - [32m[nodemon] starting `node pp-server.js`[0m
hi
pouyaair
pouyaair
info: socket.io started
game initialized, error :  null
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'ateliers',
     'regroupement',
     'accueils',
     'aide personnalis√©e',
     'motricit√©',
     'temps calme',
     'language-lecture',
     'jeux math√©matiques',
     'travail collectif',
     'cantine',
     'r√©cr√©ation' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
filter {}
origin filter {} find filter {} where filter  {}
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'firstname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Pr√©nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'lastname',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom de famille' },
  _index: null }
{ path: 'birthdate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date de naissance' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'date',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'day',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], displayName: 'Jour' },
  _index: null }
{ enumValues: 
   [ 'Janvier',
     'F√©vrier',
     'Mars',
     'Avril',
     'Mai',
     'Juin',
     'Juillet',
     'Ao√ªt',
     'Septembre',
     'Octobre',
     'Novembre',
     'D√©cembre' ],
  regExp: null,
  path: 'month',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Janvier',
        'F√©vrier',
        'Mars',
        'Avril',
        'Mai',
        'Juin',
        'Juillet',
        'Ao√ªt',
        'Septembre',
        'Octobre',
        'Novembre',
        'D√©cembre' ],
     displayName: 'Mois',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: [ '2012', '2013' ],
  regExp: null,
  path: 'year',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: [ 2012, 2013 ],
     displayName: 'Ann√©e',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ enumValues: 
   [ 'Vacances',
     'P√©rriode 1',
     'P√©rriode 2',
     'P√©rriode 3',
     'P√©rriode 4',
     'P√©rriode 5' ],
  regExp: null,
  path: 'period',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     viewType: 'Enum',
     enum: 
      [ 'Vacances',
        'P√©rriode 1',
        'P√©rriode 2',
        'P√©rriode 3',
        'P√©rriode 4',
        'P√©rriode 5' ],
     displayName: 'P√©rriode',
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'duration',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Dur√©e',
     viewType: 'Time' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'Horraire D√©but',
     viewType: 'Time',
     readOnly: true,
     hidden: true },
  _index: null }
{ enumValues: 
   [ 'accueils',
     'aide personnalis√©e',
     'ateliers',
     'cantine',
     'jeux math√©matiques',
     'language-lecture',
     'motricit√©',
     'regroupement',
     'r√©cr√©ation',
     'temps calme',
     'travail collectif' ],
  regExp: null,
  path: 'stepType',
  instance: 'String',
  validators: [ [ [Function], 'enum' ] ],
  setters: [],
  getters: [],
  options: 
   { type: [Function: String],
     enum: 
      [ 'ateliers',
        'regroupement',
        'accueils',
        'aide personnalis√©e',
        'motricit√©',
        'temps calme',
        'language-lecture',
        'jeux math√©matiques',
        'travail collectif',
        'cantine',
        'r√©cr√©ation' ],
     displayName: 'Type de l\'√©tape',
     viewType: 'Enum',
     sortEnumValues: true,
     readOnly: true },
  _index: null,
  enumValidator: [Function] }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ path: 'dayDate',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Date], displayName: 'Date' },
  _index: null }
{ path: 'DayTemplate',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayTemplate',
     controller: 'DayTemplate',
     displayName: 'Journ√©e type',
     viewType: 'HasOne' },
  _index: null }
{ path: 'DayStep',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'DayStep',
     controller: 'DayStep',
     displayName: 'Etape',
     viewType: 'HasOne' },
  _index: null }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ path: 'startTime',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: Date],
     displayName: 'D√©but de la journ√©e',
     viewType: 'Time' },
  _index: null }
{ casterConstructor: [Function: ObjectId],
  caster: 
   { path: null,
     instance: 'ObjectID',
     validators: [],
     setters: [],
     getters: [],
     options: 
      { ref: 'DayStep',
        controller: 'DayStep',
        displayName: 'Etapes',
        viewType: 'HasMany' },
     _index: null },
  path: 'daySteps',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: { type: [ [Object] ] },
  _index: null,
  defaultValue: [Function] }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ casterConstructor: [Function: Mixed],
  caster: 
   { path: null,
     instance: undefined,
     validators: [],
     setters: [],
     getters: [],
     options: {},
     _index: null },
  path: 'skills',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ undefined ],
     controller: 'Skill',
     displayName: 'Comp√©tences',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'SkillDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 'SkillDomain',
     controller: 'SkillDomain',
     displayName: 'Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ schema: 
   { paths: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object] },
     subpaths: {},
     virtuals: { id: [Object] },
     nested: {},
     inherits: {},
     callQueue: [],
     _indexes: [],
     methods: {},
     statics: {},
     tree: 
      { name: [Object],
        skills: [Object],
        SkillDomain: [Object],
        order: [Object],
        _id: [Object],
        id: [Object] },
     _requiredpaths: [],
     options: 
      { shardKey: null,
        autoIndex: true,
        minimize: true,
        versionKey: '__v',
        capped: false,
        strict: true,
        safe: true } },
  casterConstructor: 
   { [Function: EmbeddedDocument]
     schema: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     options: 
      { type: [Object],
        controller: 'SkillSubDomain',
        displayName: 'Sous-Domaines',
        viewType: 'HasMany' } },
  caster: { _id: 506ca428b11f350000000001, order: 0, skills: [] },
  path: 'SkillSubDomains',
  instance: undefined,
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [ [Object] ],
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaines',
     viewType: 'HasMany' },
  _index: null,
  defaultValue: [Function] }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
{ enumValues: [],
  regExp: null,
  path: 'name',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Nom' },
  _index: null }
{ enumValues: [],
  regExp: null,
  path: 'description',
  instance: 'String',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: String], displayName: 'Description' },
  _index: null }
{ path: 'SkillSubDomain',
  instance: 'ObjectID',
  validators: [],
  setters: [],
  getters: [],
  options: 
   { type: [Function: ObjectId],
     ref: 
      { paths: [Object],
        subpaths: {},
        virtuals: [Object],
        nested: {},
        inherits: {},
        callQueue: [],
        _indexes: [],
        methods: {},
        statics: {},
        tree: [Object],
        _requiredpaths: [],
        options: [Object] },
     controller: 'SkillSubDomain',
     displayName: 'Sous-Domaine',
     viewType: 'HasOne' },
  _index: null }
{ path: 'order',
  instance: 'Number',
  validators: [],
  setters: [],
  getters: [],
  options: { type: [Function: Number], default: 0, displayName: 'Ordre' },
  _index: null,
  defaultValue: 0 }
{ path: '_id',
  instance: 'ObjectID',
  validators: [],
  setters: [ [Function: resetId] ],
  getters: [],
  options: { type: [Function: ObjectId], auto: true },
  _index: null,
  defaultValue: [Function: defaultId] }
filter {}
origin filter {} find filter {} where filter  {}
3 Oct 22:46:41 - [nodemon] exiting
